; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\io_logic.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\io_logic.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\BSP_lib\Inc\Driver -I.\CMSIS\CMOSupport -I.\CMSIS\NUC1xxSupport -I.\User\inc -I.\modbus\include -I.\modbus\MBport -I.\modbus\rtu -I"D:\Program Files\keil\ARM\RV31\INC" -I"D:\Program Files\keil\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include" -I"D:\Program Files\keil\ARM\Inc\Nuvoton\NUC1xx" --omf_browse=.\obj\io_logic.crf User\src\IO_logic.c]
                          THUMB

                          AREA ||i.GPIOInit||, CODE, READONLY, ALIGN=2

                  GPIOInit PROC
;;;3      
;;;4      void GPIOInit(void)
000000  b510              PUSH     {r4,lr}
;;;5      {
;;;6          /*设置信号端口,为输出模式*/
;;;7          DrvGPIO_Open(E_GPA,11,E_IO_OUTPUT);			//PBF
000002  2201              MOVS     r2,#1
000004  210b              MOVS     r1,#0xb
000006  2000              MOVS     r0,#0
000008  f7fffffe          BL       DrvGPIO_Open
;;;8          DrvGPIO_Open(E_GPA,10,E_IO_OUTPUT);			//RDY
00000c  2201              MOVS     r2,#1
00000e  210a              MOVS     r1,#0xa
000010  2000              MOVS     r0,#0
000012  f7fffffe          BL       DrvGPIO_Open
;;;9          DrvGPIO_Open(E_GPA,9,E_IO_OUTPUT);			//S_RTS
000016  2201              MOVS     r2,#1
000018  2109              MOVS     r1,#9
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       DrvGPIO_Open
;;;10         DrvGPIO_Open(E_GPA,8,E_IO_OUTPUT);			//REQ_IT
000020  2201              MOVS     r2,#1
000022  2108              MOVS     r1,#8
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       DrvGPIO_Open
;;;11         S_RTS = 1;									//接口板允许接受
00002a  2001              MOVS     r0,#1
00002c  490e              LDR      r1,|L1.104|
00002e  6248              STR      r0,[r1,#0x24]
;;;12         REQ_IT = 1;
000030  6208              STR      r0,[r1,#0x20]
;;;13     
;;;14         //DrvGPIO_Open(E_GPB,3,E_IO_OUTPUT);			//REQ_IT
;;;15         //GPB_3 = 1;
;;;16         /*设置编码器端口,为输入模式*/
;;;17         DrvGPIO_Open(E_GPC,0,E_IO_INPUT);			//CSO
000032  2200              MOVS     r2,#0
000034  4611              MOV      r1,r2
000036  2002              MOVS     r0,#2
000038  f7fffffe          BL       DrvGPIO_Open
;;;18         DrvGPIO_Open(E_GPC,1,E_IO_INPUT);			//CS1
00003c  2200              MOVS     r2,#0
00003e  2101              MOVS     r1,#1
000040  2002              MOVS     r0,#2
000042  f7fffffe          BL       DrvGPIO_Open
;;;19         DrvGPIO_Open(E_GPC,2,E_IO_INPUT);			//CS2
000046  2200              MOVS     r2,#0
000048  2102              MOVS     r1,#2
00004a  4608              MOV      r0,r1
00004c  f7fffffe          BL       DrvGPIO_Open
;;;20     
;;;21             
;;;22         /*设置UART2端口,为串口模式*/	
;;;23         DrvGPIO_InitFunction(E_FUNC_UART0);	//TX,RX_RX_TX
000050  2029              MOVS     r0,#0x29
000052  f7fffffe          BL       DrvGPIO_InitFunction
;;;24         DrvGPIO_InitFunction(E_FUNC_UART1_RX_TX);	//RX,TX
000056  202d              MOVS     r0,#0x2d
000058  f7fffffe          BL       DrvGPIO_InitFunction
;;;25     
;;;26         /*设置CAN端口*/
;;;27     
;;;28         PBF = 0;
00005c  2000              MOVS     r0,#0
00005e  4902              LDR      r1,|L1.104|
000060  6288              STR      r0,[r1,#0x28]
;;;29         RDY = 0;
000062  62c8              STR      r0,[r1,#0x2c]
;;;30     }
000064  bd10              POP      {r4,pc}
;;;31     
                          ENDP

000066  0000              DCW      0x0000
                  |L1.104|
                          DCD      0x50004200

                          AREA ||i.GetUart1Baud||, CODE, READONLY, ALIGN=2

                  GetUart1Baud PROC
;;;31     
;;;32     u32bit GetUart1Baud(void)
000000  b500              PUSH     {lr}
;;;33     {
;;;34     	u32bit Addr = 0;
000002  2100              MOVS     r1,#0
;;;35     	Addr = GPC_2;
000004  4813              LDR      r0,|L2.84|
000006  6881              LDR      r1,[r0,#8]
;;;36     	Addr = (Addr<<1) + GPC_1;
000008  0048              LSLS     r0,r1,#1
00000a  4a12              LDR      r2,|L2.84|
00000c  6852              LDR      r2,[r2,#4]
00000e  1881              ADDS     r1,r0,r2
;;;37     	Addr = (Addr<<1) + GPC_0;
000010  0048              LSLS     r0,r1,#1
000012  4a10              LDR      r2,|L2.84|
000014  6812              LDR      r2,[r2,#0]
000016  1881              ADDS     r1,r0,r2
;;;38     	switch (Addr){
000018  000b              MOVS     r3,r1
00001a  f7fffffe          BL       __ARM_common_switch8
00001e  0717              DCB      0x07,0x17
000020  05080b0e          DCB      0x05,0x08,0x0b,0x0e
000024  11141700          DCB      0x11,0x14,0x17,0x00
;;;39     	case 1:
;;;40     		return 9600;
000028  204b              MOVS     r0,#0x4b
00002a  01c0              LSLS     r0,r0,#7
                  |L2.44|
;;;41     	case 2:
;;;42     		return 19200;
;;;43     	case 3:
;;;44     		return 38400;
;;;45     	case 4:
;;;46     		return 57600;
;;;47     	case 5:
;;;48     		return 115200;
;;;49     	case 6:
;;;50     		return 460800;
;;;51     	default:
;;;52     		return 9600;
;;;53     	}
;;;54     }
00002c  bd00              POP      {pc}
00002e  204b              MOVS     r0,#0x4b              ;42
000030  0200              LSLS     r0,r0,#8              ;42
000032  e7fb              B        |L2.44|
000034  204b              MOVS     r0,#0x4b              ;44
000036  0240              LSLS     r0,r0,#9              ;44
000038  e7f8              B        |L2.44|
00003a  20e1              MOVS     r0,#0xe1              ;46
00003c  0200              LSLS     r0,r0,#8              ;46
00003e  e7f5              B        |L2.44|
000040  20e1              MOVS     r0,#0xe1              ;48
000042  0240              LSLS     r0,r0,#9              ;48
000044  e7f2              B        |L2.44|
000046  20e1              MOVS     r0,#0xe1              ;50
000048  02c0              LSLS     r0,r0,#11             ;50
00004a  e7ef              B        |L2.44|
00004c  204b              MOVS     r0,#0x4b              ;52
00004e  01c0              LSLS     r0,r0,#7              ;52
000050  e7ec              B        |L2.44|
;;;55     
                          ENDP

000052  0000              DCW      0x0000
                  |L2.84|
                          DCD      0x50004280

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L19.24|
                  |L19.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L19.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L19.14|
                          ENDP

