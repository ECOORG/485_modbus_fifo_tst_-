; generated by Component: ARM Compiler 5.04 update 1 (build 49) Tool: ArmCC [5040049]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\mbfuncother.o --asm_dir=.\list\ --list_dir=.\list\ --depend=.\obj\mbfuncother.d --cpu=Cortex-M0 --apcs=interwork -O0 -I.\BSP_lib\Inc\Driver -I.\CMSIS\CMOSupport -I.\CMSIS\NUC1xxSupport -I.\User\inc -I.\modbus\include -I.\modbus\MBport -I.\modbus\rtu -I"D:\Program Files\keil\ARM\RV31\INC" -I"D:\Program Files\keil\ARM\PACK\ARM\CMSIS\3.20.4\CMSIS\Include" -I"D:\Program Files\keil\ARM\Inc\Nuvoton\NUC1xx" --omf_browse=.\obj\mbfuncother.crf modbus\functions\mbfuncother.c]
                          THUMB

                          AREA ||i.eMBFuncReportSlaveID||, CODE, READONLY, ALIGN=2

                  eMBFuncReportSlaveID PROC
;;;80     eMBException
;;;81     eMBFuncReportSlaveID( UCHAR * pucFrame, USHORT * usLen )
000000  b570              PUSH     {r4-r6,lr}
;;;82     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;83         memcpy( &pucFrame[MB_PDU_DATA_OFF], &ucMBSlaveID[0], ( size_t )usMBSlaveIDLen );
000006  4806              LDR      r0,|L1.32|
000008  8802              LDRH     r2,[r0,#0]  ; usMBSlaveIDLen
00000a  4906              LDR      r1,|L1.36|
00000c  1c68              ADDS     r0,r5,#1
00000e  f7fffffe          BL       __aeabi_memcpy
;;;84         *usLen = ( USHORT )( MB_PDU_DATA_OFF + usMBSlaveIDLen );
000012  4803              LDR      r0,|L1.32|
000014  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
000016  1c40              ADDS     r0,r0,#1
000018  8020              STRH     r0,[r4,#0]
;;;85         return MB_EX_NONE;
00001a  2000              MOVS     r0,#0
;;;86     }
00001c  bd70              POP      {r4-r6,pc}
;;;87     
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      usMBSlaveIDLen
                  |L1.36|
                          DCD      ucMBSlaveID

                          AREA ||i.eMBSetSlaveID||, CODE, READONLY, ALIGN=2

                  eMBSetSlaveID PROC
;;;52     eMBErrorCode
;;;53     eMBSetSlaveID( UCHAR ucSlaveID, BOOL xIsRunning,
000000  b5f8              PUSH     {r3-r7,lr}
;;;54                    UCHAR const *pucAdditional, USHORT usAdditionalLen )
;;;55     {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4617              MOV      r7,r2
000008  461c              MOV      r4,r3
;;;56         eMBErrorCode    eStatus = MB_ENOERR;
00000a  2000              MOVS     r0,#0
00000c  9000              STR      r0,[sp,#0]
;;;57     
;;;58         /* the first byte and second byte in the buffer is reserved for
;;;59          * the parameter ucSlaveID and the running flag. The rest of
;;;60          * the buffer is available for additional data. */
;;;61         if( usAdditionalLen + 2 < MB_FUNC_OTHER_REP_SLAVEID_BUF )
00000e  1ca0              ADDS     r0,r4,#2
000010  2820              CMP      r0,#0x20
000012  da27              BGE      |L2.100|
;;;62         {
;;;63             usMBSlaveIDLen = 0;
000014  2000              MOVS     r0,#0
000016  4915              LDR      r1,|L2.108|
000018  8008              STRH     r0,[r1,#0]
;;;64             ucMBSlaveID[usMBSlaveIDLen++] = ucSlaveID;
00001a  4608              MOV      r0,r1
00001c  8801              LDRH     r1,[r0,#0]  ; usMBSlaveIDLen
00001e  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
000020  1c40              ADDS     r0,r0,#1
000022  4a12              LDR      r2,|L2.108|
000024  8010              STRH     r0,[r2,#0]
000026  4812              LDR      r0,|L2.112|
000028  5445              STRB     r5,[r0,r1]
;;;65             ucMBSlaveID[usMBSlaveIDLen++] = ( UCHAR )( xIsRunning ? 0xFF : 0x00 );
00002a  2e00              CMP      r6,#0
00002c  d001              BEQ      |L2.50|
00002e  21ff              MOVS     r1,#0xff
000030  e000              B        |L2.52|
                  |L2.50|
000032  2100              MOVS     r1,#0
                  |L2.52|
000034  480d              LDR      r0,|L2.108|
000036  8802              LDRH     r2,[r0,#0]  ; usMBSlaveIDLen
000038  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
00003a  1c40              ADDS     r0,r0,#1
00003c  4b0b              LDR      r3,|L2.108|
00003e  8018              STRH     r0,[r3,#0]
000040  480b              LDR      r0,|L2.112|
000042  5481              STRB     r1,[r0,r2]
;;;66             if( usAdditionalLen > 0 )
000044  2c00              CMP      r4,#0
000046  dd0f              BLE      |L2.104|
;;;67             {
;;;68                 memcpy( &ucMBSlaveID[usMBSlaveIDLen], pucAdditional,
000048  4601              MOV      r1,r0
00004a  461a              MOV      r2,r3
00004c  8812              LDRH     r2,[r2,#0]  ; usMBSlaveIDLen
00004e  1888              ADDS     r0,r1,r2
000050  4622              MOV      r2,r4
000052  4639              MOV      r1,r7
000054  f7fffffe          BL       __aeabi_memcpy
;;;69                         ( size_t )usAdditionalLen );
;;;70                 usMBSlaveIDLen += usAdditionalLen;
000058  4804              LDR      r0,|L2.108|
00005a  8800              LDRH     r0,[r0,#0]  ; usMBSlaveIDLen
00005c  1900              ADDS     r0,r0,r4
00005e  4903              LDR      r1,|L2.108|
000060  8008              STRH     r0,[r1,#0]
000062  e001              B        |L2.104|
                  |L2.100|
;;;71             }
;;;72         }
;;;73         else
;;;74         {
;;;75             eStatus = MB_ENORES;
000064  2004              MOVS     r0,#4
000066  9000              STR      r0,[sp,#0]
                  |L2.104|
;;;76         }
;;;77         return eStatus;
000068  9800              LDR      r0,[sp,#0]
;;;78     }
00006a  bdf8              POP      {r3-r7,pc}
;;;79     
                          ENDP

                  |L2.108|
                          DCD      usMBSlaveIDLen
                  |L2.112|
                          DCD      ucMBSlaveID

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  ucMBSlaveID
                          %        32

                          AREA ||.data||, DATA, ALIGN=1

                  usMBSlaveIDLen
000000  0000              DCB      0x00,0x00
